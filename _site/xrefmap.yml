### YamlMime:XRefMap
sorted: true
references:
- uid: AuthService.Controllers
  name: AuthService.Controllers
  href: api/AuthService.Controllers.html
  commentId: N:AuthService.Controllers
  fullName: AuthService.Controllers
  nameWithType: AuthService.Controllers
- uid: AuthService.Controllers.AuthController
  name: AuthController
  href: api/AuthService.Controllers.AuthController.html
  commentId: T:AuthService.Controllers.AuthController
  fullName: AuthService.Controllers.AuthController
  nameWithType: AuthController
- uid: AuthService.Controllers.AuthController.#ctor(AuthService.Services.IAuthService)
  name: AuthController(IAuthService)
  href: api/AuthService.Controllers.AuthController.html#AuthService_Controllers_AuthController__ctor_AuthService_Services_IAuthService_
  commentId: M:AuthService.Controllers.AuthController.#ctor(AuthService.Services.IAuthService)
  name.vb: New(IAuthService)
  fullName: AuthService.Controllers.AuthController.AuthController(AuthService.Services.IAuthService)
  fullName.vb: AuthService.Controllers.AuthController.New(AuthService.Services.IAuthService)
  nameWithType: AuthController.AuthController(IAuthService)
  nameWithType.vb: AuthController.New(IAuthService)
- uid: AuthService.Controllers.AuthController.#ctor*
  name: AuthController
  href: api/AuthService.Controllers.AuthController.html#AuthService_Controllers_AuthController__ctor_
  commentId: Overload:AuthService.Controllers.AuthController.#ctor
  isSpec: "True"
  name.vb: New
  fullName: AuthService.Controllers.AuthController.AuthController
  fullName.vb: AuthService.Controllers.AuthController.New
  nameWithType: AuthController.AuthController
  nameWithType.vb: AuthController.New
- uid: AuthService.Controllers.AuthController.Login(AuthService.DTOs.LoginDto)
  name: Login(LoginDto)
  href: api/AuthService.Controllers.AuthController.html#AuthService_Controllers_AuthController_Login_AuthService_DTOs_LoginDto_
  commentId: M:AuthService.Controllers.AuthController.Login(AuthService.DTOs.LoginDto)
  fullName: AuthService.Controllers.AuthController.Login(AuthService.DTOs.LoginDto)
  nameWithType: AuthController.Login(LoginDto)
- uid: AuthService.Controllers.AuthController.Login*
  name: Login
  href: api/AuthService.Controllers.AuthController.html#AuthService_Controllers_AuthController_Login_
  commentId: Overload:AuthService.Controllers.AuthController.Login
  isSpec: "True"
  fullName: AuthService.Controllers.AuthController.Login
  nameWithType: AuthController.Login
- uid: AuthService.Controllers.AuthController.Register(AuthService.DTOs.RegisterDto)
  name: Register(RegisterDto)
  href: api/AuthService.Controllers.AuthController.html#AuthService_Controllers_AuthController_Register_AuthService_DTOs_RegisterDto_
  commentId: M:AuthService.Controllers.AuthController.Register(AuthService.DTOs.RegisterDto)
  fullName: AuthService.Controllers.AuthController.Register(AuthService.DTOs.RegisterDto)
  nameWithType: AuthController.Register(RegisterDto)
- uid: AuthService.Controllers.AuthController.Register*
  name: Register
  href: api/AuthService.Controllers.AuthController.html#AuthService_Controllers_AuthController_Register_
  commentId: Overload:AuthService.Controllers.AuthController.Register
  isSpec: "True"
  fullName: AuthService.Controllers.AuthController.Register
  nameWithType: AuthController.Register
- uid: AuthService.DTOs
  name: AuthService.DTOs
  href: api/AuthService.DTOs.html
  commentId: N:AuthService.DTOs
  fullName: AuthService.DTOs
  nameWithType: AuthService.DTOs
- uid: AuthService.DTOs.LoginDto
  name: LoginDto
  href: api/AuthService.DTOs.LoginDto.html
  commentId: T:AuthService.DTOs.LoginDto
  fullName: AuthService.DTOs.LoginDto
  nameWithType: LoginDto
- uid: AuthService.DTOs.LoginDto.Password
  name: Password
  href: api/AuthService.DTOs.LoginDto.html#AuthService_DTOs_LoginDto_Password
  commentId: P:AuthService.DTOs.LoginDto.Password
  fullName: AuthService.DTOs.LoginDto.Password
  nameWithType: LoginDto.Password
- uid: AuthService.DTOs.LoginDto.Password*
  name: Password
  href: api/AuthService.DTOs.LoginDto.html#AuthService_DTOs_LoginDto_Password_
  commentId: Overload:AuthService.DTOs.LoginDto.Password
  isSpec: "True"
  fullName: AuthService.DTOs.LoginDto.Password
  nameWithType: LoginDto.Password
- uid: AuthService.DTOs.LoginDto.Username
  name: Username
  href: api/AuthService.DTOs.LoginDto.html#AuthService_DTOs_LoginDto_Username
  commentId: P:AuthService.DTOs.LoginDto.Username
  fullName: AuthService.DTOs.LoginDto.Username
  nameWithType: LoginDto.Username
- uid: AuthService.DTOs.LoginDto.Username*
  name: Username
  href: api/AuthService.DTOs.LoginDto.html#AuthService_DTOs_LoginDto_Username_
  commentId: Overload:AuthService.DTOs.LoginDto.Username
  isSpec: "True"
  fullName: AuthService.DTOs.LoginDto.Username
  nameWithType: LoginDto.Username
- uid: AuthService.DTOs.RegisterDto
  name: RegisterDto
  href: api/AuthService.DTOs.RegisterDto.html
  commentId: T:AuthService.DTOs.RegisterDto
  fullName: AuthService.DTOs.RegisterDto
  nameWithType: RegisterDto
- uid: AuthService.DTOs.RegisterDto.Password
  name: Password
  href: api/AuthService.DTOs.RegisterDto.html#AuthService_DTOs_RegisterDto_Password
  commentId: P:AuthService.DTOs.RegisterDto.Password
  fullName: AuthService.DTOs.RegisterDto.Password
  nameWithType: RegisterDto.Password
- uid: AuthService.DTOs.RegisterDto.Password*
  name: Password
  href: api/AuthService.DTOs.RegisterDto.html#AuthService_DTOs_RegisterDto_Password_
  commentId: Overload:AuthService.DTOs.RegisterDto.Password
  isSpec: "True"
  fullName: AuthService.DTOs.RegisterDto.Password
  nameWithType: RegisterDto.Password
- uid: AuthService.DTOs.RegisterDto.Username
  name: Username
  href: api/AuthService.DTOs.RegisterDto.html#AuthService_DTOs_RegisterDto_Username
  commentId: P:AuthService.DTOs.RegisterDto.Username
  fullName: AuthService.DTOs.RegisterDto.Username
  nameWithType: RegisterDto.Username
- uid: AuthService.DTOs.RegisterDto.Username*
  name: Username
  href: api/AuthService.DTOs.RegisterDto.html#AuthService_DTOs_RegisterDto_Username_
  commentId: Overload:AuthService.DTOs.RegisterDto.Username
  isSpec: "True"
  fullName: AuthService.DTOs.RegisterDto.Username
  nameWithType: RegisterDto.Username
- uid: AuthService.Data
  name: AuthService.Data
  href: api/AuthService.Data.html
  commentId: N:AuthService.Data
  fullName: AuthService.Data
  nameWithType: AuthService.Data
- uid: AuthService.Data.ApplicationDbContext
  name: ApplicationDbContext
  href: api/AuthService.Data.ApplicationDbContext.html
  commentId: T:AuthService.Data.ApplicationDbContext
  fullName: AuthService.Data.ApplicationDbContext
  nameWithType: ApplicationDbContext
- uid: AuthService.Data.ApplicationDbContext.#ctor(Microsoft.EntityFrameworkCore.DbContextOptions{AuthService.Data.ApplicationDbContext})
  name: ApplicationDbContext(DbContextOptions<ApplicationDbContext>)
  href: api/AuthService.Data.ApplicationDbContext.html#AuthService_Data_ApplicationDbContext__ctor_Microsoft_EntityFrameworkCore_DbContextOptions_AuthService_Data_ApplicationDbContext__
  commentId: M:AuthService.Data.ApplicationDbContext.#ctor(Microsoft.EntityFrameworkCore.DbContextOptions{AuthService.Data.ApplicationDbContext})
  name.vb: New(DbContextOptions(Of ApplicationDbContext))
  fullName: AuthService.Data.ApplicationDbContext.ApplicationDbContext(Microsoft.EntityFrameworkCore.DbContextOptions<AuthService.Data.ApplicationDbContext>)
  fullName.vb: AuthService.Data.ApplicationDbContext.New(Microsoft.EntityFrameworkCore.DbContextOptions(Of AuthService.Data.ApplicationDbContext))
  nameWithType: ApplicationDbContext.ApplicationDbContext(DbContextOptions<ApplicationDbContext>)
  nameWithType.vb: ApplicationDbContext.New(DbContextOptions(Of ApplicationDbContext))
- uid: AuthService.Data.ApplicationDbContext.#ctor*
  name: ApplicationDbContext
  href: api/AuthService.Data.ApplicationDbContext.html#AuthService_Data_ApplicationDbContext__ctor_
  commentId: Overload:AuthService.Data.ApplicationDbContext.#ctor
  isSpec: "True"
  name.vb: New
  fullName: AuthService.Data.ApplicationDbContext.ApplicationDbContext
  fullName.vb: AuthService.Data.ApplicationDbContext.New
  nameWithType: ApplicationDbContext.ApplicationDbContext
  nameWithType.vb: ApplicationDbContext.New
- uid: AuthService.Data.ApplicationDbContext.Users
  name: Users
  href: api/AuthService.Data.ApplicationDbContext.html#AuthService_Data_ApplicationDbContext_Users
  commentId: P:AuthService.Data.ApplicationDbContext.Users
  fullName: AuthService.Data.ApplicationDbContext.Users
  nameWithType: ApplicationDbContext.Users
- uid: AuthService.Data.ApplicationDbContext.Users*
  name: Users
  href: api/AuthService.Data.ApplicationDbContext.html#AuthService_Data_ApplicationDbContext_Users_
  commentId: Overload:AuthService.Data.ApplicationDbContext.Users
  isSpec: "True"
  fullName: AuthService.Data.ApplicationDbContext.Users
  nameWithType: ApplicationDbContext.Users
- uid: AuthService.Models
  name: AuthService.Models
  href: api/AuthService.Models.html
  commentId: N:AuthService.Models
  fullName: AuthService.Models
  nameWithType: AuthService.Models
- uid: AuthService.Models.User
  name: User
  href: api/AuthService.Models.User.html
  commentId: T:AuthService.Models.User
  fullName: AuthService.Models.User
  nameWithType: User
- uid: AuthService.Models.User.CreatedAt
  name: CreatedAt
  href: api/AuthService.Models.User.html#AuthService_Models_User_CreatedAt
  commentId: P:AuthService.Models.User.CreatedAt
  fullName: AuthService.Models.User.CreatedAt
  nameWithType: User.CreatedAt
- uid: AuthService.Models.User.CreatedAt*
  name: CreatedAt
  href: api/AuthService.Models.User.html#AuthService_Models_User_CreatedAt_
  commentId: Overload:AuthService.Models.User.CreatedAt
  isSpec: "True"
  fullName: AuthService.Models.User.CreatedAt
  nameWithType: User.CreatedAt
- uid: AuthService.Models.User.Id
  name: Id
  href: api/AuthService.Models.User.html#AuthService_Models_User_Id
  commentId: P:AuthService.Models.User.Id
  fullName: AuthService.Models.User.Id
  nameWithType: User.Id
- uid: AuthService.Models.User.Id*
  name: Id
  href: api/AuthService.Models.User.html#AuthService_Models_User_Id_
  commentId: Overload:AuthService.Models.User.Id
  isSpec: "True"
  fullName: AuthService.Models.User.Id
  nameWithType: User.Id
- uid: AuthService.Models.User.PasswordHash
  name: PasswordHash
  href: api/AuthService.Models.User.html#AuthService_Models_User_PasswordHash
  commentId: P:AuthService.Models.User.PasswordHash
  fullName: AuthService.Models.User.PasswordHash
  nameWithType: User.PasswordHash
- uid: AuthService.Models.User.PasswordHash*
  name: PasswordHash
  href: api/AuthService.Models.User.html#AuthService_Models_User_PasswordHash_
  commentId: Overload:AuthService.Models.User.PasswordHash
  isSpec: "True"
  fullName: AuthService.Models.User.PasswordHash
  nameWithType: User.PasswordHash
- uid: AuthService.Models.User.Role
  name: Role
  href: api/AuthService.Models.User.html#AuthService_Models_User_Role
  commentId: P:AuthService.Models.User.Role
  fullName: AuthService.Models.User.Role
  nameWithType: User.Role
- uid: AuthService.Models.User.Role*
  name: Role
  href: api/AuthService.Models.User.html#AuthService_Models_User_Role_
  commentId: Overload:AuthService.Models.User.Role
  isSpec: "True"
  fullName: AuthService.Models.User.Role
  nameWithType: User.Role
- uid: AuthService.Models.User.Username
  name: Username
  href: api/AuthService.Models.User.html#AuthService_Models_User_Username
  commentId: P:AuthService.Models.User.Username
  fullName: AuthService.Models.User.Username
  nameWithType: User.Username
- uid: AuthService.Models.User.Username*
  name: Username
  href: api/AuthService.Models.User.html#AuthService_Models_User_Username_
  commentId: Overload:AuthService.Models.User.Username
  isSpec: "True"
  fullName: AuthService.Models.User.Username
  nameWithType: User.Username
- uid: AuthService.Services
  name: AuthService.Services
  href: api/AuthService.Services.html
  commentId: N:AuthService.Services
  fullName: AuthService.Services
  nameWithType: AuthService.Services
- uid: AuthService.Services.AuthService
  name: AuthService
  href: api/AuthService.Services.AuthService.html
  commentId: T:AuthService.Services.AuthService
  fullName: AuthService.Services.AuthService
  nameWithType: AuthService
- uid: AuthService.Services.AuthService.#ctor(AuthService.Data.ApplicationDbContext,Microsoft.Extensions.Configuration.IConfiguration)
  name: AuthService(ApplicationDbContext, IConfiguration)
  href: api/AuthService.Services.AuthService.html#AuthService_Services_AuthService__ctor_AuthService_Data_ApplicationDbContext_Microsoft_Extensions_Configuration_IConfiguration_
  commentId: M:AuthService.Services.AuthService.#ctor(AuthService.Data.ApplicationDbContext,Microsoft.Extensions.Configuration.IConfiguration)
  name.vb: New(ApplicationDbContext, IConfiguration)
  fullName: AuthService.Services.AuthService.AuthService(AuthService.Data.ApplicationDbContext, Microsoft.Extensions.Configuration.IConfiguration)
  fullName.vb: AuthService.Services.AuthService.New(AuthService.Data.ApplicationDbContext, Microsoft.Extensions.Configuration.IConfiguration)
  nameWithType: AuthService.AuthService(ApplicationDbContext, IConfiguration)
  nameWithType.vb: AuthService.New(ApplicationDbContext, IConfiguration)
- uid: AuthService.Services.AuthService.#ctor*
  name: AuthService
  href: api/AuthService.Services.AuthService.html#AuthService_Services_AuthService__ctor_
  commentId: Overload:AuthService.Services.AuthService.#ctor
  isSpec: "True"
  name.vb: New
  fullName: AuthService.Services.AuthService.AuthService
  fullName.vb: AuthService.Services.AuthService.New
  nameWithType: AuthService.AuthService
  nameWithType.vb: AuthService.New
- uid: AuthService.Services.AuthService.LoginAsync(AuthService.DTOs.LoginDto)
  name: LoginAsync(LoginDto)
  href: api/AuthService.Services.AuthService.html#AuthService_Services_AuthService_LoginAsync_AuthService_DTOs_LoginDto_
  commentId: M:AuthService.Services.AuthService.LoginAsync(AuthService.DTOs.LoginDto)
  fullName: AuthService.Services.AuthService.LoginAsync(AuthService.DTOs.LoginDto)
  nameWithType: AuthService.LoginAsync(LoginDto)
- uid: AuthService.Services.AuthService.LoginAsync*
  name: LoginAsync
  href: api/AuthService.Services.AuthService.html#AuthService_Services_AuthService_LoginAsync_
  commentId: Overload:AuthService.Services.AuthService.LoginAsync
  isSpec: "True"
  fullName: AuthService.Services.AuthService.LoginAsync
  nameWithType: AuthService.LoginAsync
- uid: AuthService.Services.AuthService.RegisterAsync(AuthService.DTOs.RegisterDto)
  name: RegisterAsync(RegisterDto)
  href: api/AuthService.Services.AuthService.html#AuthService_Services_AuthService_RegisterAsync_AuthService_DTOs_RegisterDto_
  commentId: M:AuthService.Services.AuthService.RegisterAsync(AuthService.DTOs.RegisterDto)
  fullName: AuthService.Services.AuthService.RegisterAsync(AuthService.DTOs.RegisterDto)
  nameWithType: AuthService.RegisterAsync(RegisterDto)
- uid: AuthService.Services.AuthService.RegisterAsync*
  name: RegisterAsync
  href: api/AuthService.Services.AuthService.html#AuthService_Services_AuthService_RegisterAsync_
  commentId: Overload:AuthService.Services.AuthService.RegisterAsync
  isSpec: "True"
  fullName: AuthService.Services.AuthService.RegisterAsync
  nameWithType: AuthService.RegisterAsync
- uid: AuthService.Services.IAuthService
  name: IAuthService
  href: api/AuthService.Services.IAuthService.html
  commentId: T:AuthService.Services.IAuthService
  fullName: AuthService.Services.IAuthService
  nameWithType: IAuthService
- uid: AuthService.Services.IAuthService.LoginAsync(AuthService.DTOs.LoginDto)
  name: LoginAsync(LoginDto)
  href: api/AuthService.Services.IAuthService.html#AuthService_Services_IAuthService_LoginAsync_AuthService_DTOs_LoginDto_
  commentId: M:AuthService.Services.IAuthService.LoginAsync(AuthService.DTOs.LoginDto)
  fullName: AuthService.Services.IAuthService.LoginAsync(AuthService.DTOs.LoginDto)
  nameWithType: IAuthService.LoginAsync(LoginDto)
- uid: AuthService.Services.IAuthService.LoginAsync*
  name: LoginAsync
  href: api/AuthService.Services.IAuthService.html#AuthService_Services_IAuthService_LoginAsync_
  commentId: Overload:AuthService.Services.IAuthService.LoginAsync
  isSpec: "True"
  fullName: AuthService.Services.IAuthService.LoginAsync
  nameWithType: IAuthService.LoginAsync
- uid: AuthService.Services.IAuthService.RegisterAsync(AuthService.DTOs.RegisterDto)
  name: RegisterAsync(RegisterDto)
  href: api/AuthService.Services.IAuthService.html#AuthService_Services_IAuthService_RegisterAsync_AuthService_DTOs_RegisterDto_
  commentId: M:AuthService.Services.IAuthService.RegisterAsync(AuthService.DTOs.RegisterDto)
  fullName: AuthService.Services.IAuthService.RegisterAsync(AuthService.DTOs.RegisterDto)
  nameWithType: IAuthService.RegisterAsync(RegisterDto)
- uid: AuthService.Services.IAuthService.RegisterAsync*
  name: RegisterAsync
  href: api/AuthService.Services.IAuthService.html#AuthService_Services_IAuthService_RegisterAsync_
  commentId: Overload:AuthService.Services.IAuthService.RegisterAsync
  isSpec: "True"
  fullName: AuthService.Services.IAuthService.RegisterAsync
  nameWithType: IAuthService.RegisterAsync
